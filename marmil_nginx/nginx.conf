# Required NGINX settings
user nginx;
worker_processes 2;

# Define the events section (required by NGINX)
events {
    worker_connections 1024;
}

# Define the HTTP context
http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # Log configuration
    access_log  /var/log/nginx/access.log;
    error_log   /var/log/nginx/error.log;

    # Frontend and Backend Configuration
    server {
        listen 80;
        server_name localhost;

        # Handle static content and Angular routing
        location / {
            try_files $uri $uri/ @angular;  # Fallback to @angular for routing through Angular

            # Handle CORS preflight (OPTIONS requests) for both frontend and backend
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' '*';
                add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS';
                add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization';
                add_header 'Access-Control-Max-Age' 3600;
                return 204;
            }
        }

        # Angular's fallback route handler (this will pass all requests to the Angular app)
        location @angular {
            proxy_pass http://frontend:4200;  # Forward to the Angular container on port 4200
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Serve favicon.ico directly from Angular (if served as part of static assets)
        location = /favicon.ico {
            proxy_pass http://frontend:4200/favicon.ico;  # Proxy to Angular's favicon.ico
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Serve other static assets (like images, fonts, etc.)
        location /assets/ {
            proxy_pass http://frontend:4200/assets/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Backend (NestJS) routing
        location /api/ {
            proxy_pass http://backend:3000;  # Forward to the NestJS container on port 3000
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Optionally, handle 404 (Not Found) errors gracefully
        error_page 404 /index.html;  # Use Angular's routing for 404 errors
        location = /index.html {
            root /usr/share/nginx/html;  # Path to your Angular build output
            internal;  # Prevent external access to this route directly
        }
    }
}
